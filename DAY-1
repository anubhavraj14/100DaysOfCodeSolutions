Ques1. https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/description/ 
CODE: 
class Solution {
public:
    int minimumRounds(vector<int>& tasks) {
        map <int,int> m;
        for(auto val : tasks){
            m[val]++;
        }
        int count=0;
        for(auto val : m){
            if(val.second==1) return -1;
            else if(val.second>3){
                count += ceil((val.second)/(float)3);
            }
            else count++;
        }
        return count;
    }
};


Ques2. https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/submissions/871915872/
CODE:
class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        sort(points.begin(),points.end());
        int ct= 1;
        int index = points[0][1];
        for(int i=1; i<points.size(); i++){
            if(index<points[i][0]) {
                ct++;
                index = points[i][1];
            }
            index = min(points[i][1], index);
        }
        return ct;
    }
};


